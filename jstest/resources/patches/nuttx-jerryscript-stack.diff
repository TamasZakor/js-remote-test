diff --git a/targets/nuttx-stm32f4/jerry_main.c b/targets/nuttx-stm32f4/jerry_main.c
index 740d4dc..711e3a7 100644
--- a/targets/nuttx-stm32f4/jerry_main.c
+++ b/targets/nuttx-stm32f4/jerry_main.c
@@ -38,6 +38,11 @@
  */
 #define SYNTAX_ERROR_CONTEXT_SIZE 2

+/*
+ * Pattern for stack measurement.
+ */
+#define PATTERN (0xfe)
+
 /**
  * Print usage and available options
  */
@@ -296,12 +301,9 @@ static jerry_log_level_t jerry_log_level = JERRY_LOG_LEVEL_ERROR;
  * Main program.
  *
  * @return 0 if success, error code otherwise
+ * JerryScript entry
  */
-#ifdef CONFIG_BUILD_KERNEL
-int main (int argc, FAR char *argv[])
-#else
-int jerry_main (int argc, char *argv[])
-#endif
+int jerry_entry(int argc, char *argv[])
 {
   if (argc > JERRY_MAX_COMMAND_LINE_ARGS)
   {
@@ -466,6 +468,64 @@ int jerry_main (int argc, char *argv[])
 } /* main */

 /**
++ * Main program.
++ *
++ * @return 0 if success, error code otherwise
++ */
+#ifdef CONFIG_BUILD_KERNEL
+int main (int argc, FAR char *argv[])
+#else
+int jerry_main (int argc, char *argv[])
+#endif
+{
+FILE *fp;
+char fname[32];
+char stack_info[64];
+long int size;
+long int base;
+long int stack_ptr;
+size_t file_size;
+
+/*
+ * Content of /proc/<pid>/stack:
+ * StackBase:  0x2001a368
+ * StackSize:  16364
+ */
+
+sprintf(fname, "/proc/%d/stack", getpid());
+fp = fopen(fname, "r");
+if (!fp) {
+  return 1;
+}
+
+/* Extract stack info */
+file_size = fread(stack_info, 1, 63, fp);
+stack_info[file_size] = '\0';
+fclose(fp);
+
+sscanf(stack_info, "StackBase:  0x%x\nStackSize:  %d", &base, &size);
+uint8_t *end = (uint8_t *)(base - size + 4);
+
+/* Stack coloration */
+__asm__("mov %0, sp" : "=r" (stack_ptr));
+memset(end, PATTERN, stack_ptr - (long int)end);
+
+/* Run Jerryscript */
+int ret_code = jerry_entry(argc, argv);
+
+/* Check max stack usage */
+uint8_t *stack_p = end;
+
+while (*stack_p == PATTERN) {
+  stack_p++;
+}
+
+printf ("Stack usage: %d\n", (int) (base - (long int)stack_p));
+
+return ret_code;
+ } /* main */
+
+/**
  * Aborts the program.
  */
 void jerry_port_fatal (jerry_fatal_code_t code)
